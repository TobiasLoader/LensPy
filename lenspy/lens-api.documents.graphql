mutation addReaction($request: ReactionRequest!) {
  addReaction(request: $request)
}
query generateModuleCurrencyApprovalData($request: GenerateModuleCurrencyApprovalDataRequest!) {
  generateModuleCurrencyApprovalData(request: $request) {
	to
	from
	data
  }
}
query approvedModuleAllowanceAmount($request: ApprovedModuleAllowanceAmountRequest!) {
  approvedModuleAllowanceAmount(request: $request) {
	currency
	module
	contractAddress
	allowance
  }
}
mutation createAttachMediaData($request: PublicMediaRequest!) {
  createAttachMediaData(request: $request) {
	signedUrl
	media {
	  item
	  type
	  cover
	  source
	  altTag
	}
  }
}
mutation authenticate($request: SignedAuthChallenge!) {
  authenticate(request: $request) {
	accessToken
	refreshToken
  }
}
mutation Broadcast($request: BroadcastRequest!) {
  broadcast(request: $request) {
	... on RelayerResult {
	  txHash
	  txId
	}
	... on RelayError {
	  reason
	}
  }
}
mutation createBurnProfileTypedData($request: BurnProfileRequest!) {
  createBurnProfileTypedData(request: $request) {
	id
	expiresAt
	typedData {
	  domain {
		name
		chainId
		version
		verifyingContract
	  }
	  types {
		BurnWithSig {
		  name
		  type
		}
	  }
	  value {
		nonce
		deadline
		tokenId
	  }
	}
  }
}
query Challenge($request: ChallengeRequest!) {
  challenge(request: $request) {
	text
  }
}
mutation createCollectTypedData($request: CreateCollectRequest!) {
  createCollectTypedData(request: $request) {
	id
	expiresAt
	typedData {
	  types {
		CollectWithSig {
		  name
		  type
		}
	  }
	  domain {
		name
		chainId
		version
		verifyingContract
	  }
	  value {
		nonce
		deadline
		profileId
		pubId
		data
	  }
	}
  }
}
mutation createCommentTypedData($request: CreatePublicCommentRequest!) {
  createCommentTypedData(request: $request) {
	id
	expiresAt
	typedData {
	  types {
		CommentWithSig {
		  name
		  type
		}
	  }
	  domain {
		name
		chainId
		version
		verifyingContract
	  }
	  value {
		nonce
		deadline
		profileId
		profileIdPointed
		pubIdPointed
		contentURI
		collectModule
		collectModuleInitData
		referenceModule
		referenceModuleInitData
		referenceModuleData
	  }
	}
  }
}
fragment MediaFields on Media {
  url
  width
  height
  mimeType
}

fragment ProfileFields on Profile {
  id
  name
  bio
  attributes {
	displayType
	traitType
	key
	value
  }
  isFollowedByMe
  isFollowing(who: null)
  followNftAddress
  metadata
  isDefault
  handle
  picture {
	... on NftImage {
	  contractAddress
	  tokenId
	  uri
	  verified
	}
	... on MediaSet {
	  original {
		...MediaFields
	  }
	  small {
		...MediaFields
	  }
	  medium {
		...MediaFields
	  }
	}
  }
  coverPicture {
	... on NftImage {
	  contractAddress
	  tokenId
	  uri
	  verified
	}
	... on MediaSet {
	  original {
		...MediaFields
	  }
	  small {
		...MediaFields
	  }
	  medium {
		...MediaFields
	  }
	}
  }
  ownedBy
  dispatcher {
	address
	canUseRelay
  }
  stats {
	totalFollowers
	totalFollowing
	totalPosts
	totalComments
	totalMirrors
	totalPublications
	totalCollects
  }
  followModule {
	...FollowModuleFields
  }
  onChainIdentity {
	ens {
	  name
	}
	proofOfHumanity
	sybilDotOrg {
	  verified
	  source {
		twitter {
		  handle
		}
	  }
	}
	worldcoin {
	  isHuman
	}
  }
}

fragment PublicationStatsFields on PublicationStats {
  totalAmountOfMirrors
  totalAmountOfCollects
  totalAmountOfComments
}

fragment MetadataOutputFields on MetadataOutput {
  name
  description
  content
  media {
	original {
	  ...MediaFields
	}
	small {
	  ...MediaFields
	}
	medium {
	  ...MediaFields
	}
  }
  attributes {
	displayType
	traitType
	value
  }
  encryptionParams {
	providerSpecificParams {
	  encryptionKey
	}
	accessCondition {
		...AccessConditionFields
	}
	encryptedFields {
		animation_url
		content
		external_url
		image
		media {
			...EncryptedMediaSetFields
		}
	}
  }
}

fragment Erc20Fields on Erc20 {
  name
  symbol
  decimals
  address
}

fragment PostFields on Post {
  id
  profile {
	...ProfileFields
  }
  stats {
	...PublicationStatsFields
  }
  metadata {
	...MetadataOutputFields
  }
  createdAt
  collectModule {
	...CollectModuleFields
  }
  referenceModule {
	...ReferenceModuleFields
  }
  appId
  hidden
  reaction(request: null)
  mirrors(by: null)
  hasCollectedByMe
  isGated
}

fragment MirrorBaseFields on Mirror {
  id
  profile {
	...ProfileFields
  }
  stats {
	...PublicationStatsFields
  }
  metadata {
	...MetadataOutputFields
  }
  createdAt
  collectModule {
	...CollectModuleFields
  }
  referenceModule {
	...ReferenceModuleFields
  }
  appId
  hidden
  reaction(request: null)
  hasCollectedByMe
  isGated
}

fragment MirrorFields on Mirror {
  ...MirrorBaseFields
  mirrorOf {
	... on Post {
	  ...PostFields
	}
	... on Comment {
	  ...CommentFields
	}
  }
}

fragment CommentBaseFields on Comment {
  id
  profile {
	...ProfileFields
  }
  stats {
	...PublicationStatsFields
  }
  metadata {
	...MetadataOutputFields
  }
  createdAt
  collectModule {
	...CollectModuleFields
  }
  referenceModule {
	...ReferenceModuleFields
  }
  appId
  hidden
  reaction(request: null)
  mirrors(by: null)
  hasCollectedByMe
  isGated
}

fragment CommentFields on Comment {
  ...CommentBaseFields
  mainPost {
	... on Post {
	  ...PostFields
	}
	... on Mirror {
	  ...MirrorBaseFields
	  mirrorOf {
		... on Post {
		  ...PostFields
		}
		... on Comment {
		  ...CommentMirrorOfFields
		}
	  }
	}
  }
}

fragment CommentMirrorOfFields on Comment {
  ...CommentBaseFields
  mainPost {
	... on Post {
	  ...PostFields
	}
	... on Mirror {
	  ...MirrorBaseFields
	}
  }
}

fragment TxReceiptFields on TransactionReceipt {
  to
  from
  contractAddress
  transactionIndex
  root
  gasUsed
  logsBloom
  blockHash
  transactionHash
  blockNumber
  confirmations
  cumulativeGasUsed
  effectiveGasPrice
  byzantium
  type
  status
  logs {
	blockNumber
	blockHash
	transactionIndex
	removed
	address
	data
	topics
	transactionHash
	logIndex
  }
}

fragment WalletFields on Wallet {
  address
  defaultProfile {
	...ProfileFields
  }
}

fragment CommonPaginatedResultInfoFields on PaginatedResultInfo {
  prev
  next
  totalCount
}

fragment FollowModuleFields on FollowModule {
  ... on FeeFollowModuleSettings {
	type
	amount {
	  asset {
		name
		symbol
		decimals
		address
	  }
	  value
	}
	recipient
  }
  ... on ProfileFollowModuleSettings {
	type
	contractAddress
  }
  ... on RevertFollowModuleSettings {
	type
	contractAddress
  }
  ... on UnknownFollowModuleSettings {
	type
	contractAddress
	followModuleReturnData
  }
}

fragment CollectModuleFields on CollectModule {
  __typename
  ... on FreeCollectModuleSettings {
	type
	followerOnly
	contractAddress
  }
  ... on FeeCollectModuleSettings {
	type
	amount {
	  asset {
		...Erc20Fields
	  }
	  value
	}
	recipient
	referralFee
  }
  ... on LimitedFeeCollectModuleSettings {
	type
	collectLimit
	amount {
	  asset {
		...Erc20Fields
	  }
	  value
	}
	recipient
	referralFee
  }
  ... on LimitedTimedFeeCollectModuleSettings {
	type
	collectLimit
	amount {
	  asset {
		...Erc20Fields
	  }
	  value
	}
	recipient
	referralFee
	endTimestamp
  }
  ... on RevertCollectModuleSettings {
	type
  }
  ... on TimedFeeCollectModuleSettings {
	type
	amount {
	  asset {
		...Erc20Fields
	  }
	  value
	}
	recipient
	referralFee
	endTimestamp
  }
  ... on UnknownCollectModuleSettings {
	type
	contractAddress
	collectModuleReturnData
  }
}

fragment ReferenceModuleFields on ReferenceModule {
  ... on FollowOnlyReferenceModuleSettings {
	type
	contractAddress
  }
  ... on UnknownReferenceModuleSettings {
	type
	contractAddress
	referenceModuleReturnData
  }
  ... on DegreesOfSeparationReferenceModuleSettings {
	type
	contractAddress
	commentsRestricted
	mirrorsRestricted
	degreesOfSeparation
  }
}

fragment Erc20OwnershipFields on Erc20OwnershipOutput {
  contractAddress
  amount
  chainID
  condition
  decimals
}

fragment EoaOwnershipFields on EoaOwnershipOutput {
  address
}

fragment NftOwnershipFields on NftOwnershipOutput {
  contractAddress
  chainID
  contractType
  tokenIds
}

fragment ProfileOwnershipFields on ProfileOwnershipOutput {
  profileId
}

fragment FollowConditionFields on FollowConditionOutput {
  profileId
}

fragment CollectConditionFields on CollectConditionOutput {
  publicationId
  thisPublication
}

fragment AndConditionFields on AndConditionOutput {
  criteria {
	...AccessConditionFields
  }
}

fragment OrConditionFields on OrConditionOutput {
  criteria {
	...AccessConditionFields
  }
}
fragment AndConditionFieldsNoRecursive on AndConditionOutput {
  criteria {
	...SimpleConditionFields
  }
}

fragment OrConditionFieldsNoRecursive on OrConditionOutput {
  criteria {
	...SimpleConditionFields
  }
}

fragment SimpleConditionFields on AccessConditionOutput {
  nft {
	...NftOwnershipFields
  }
  eoa {
	...EoaOwnershipFields
  }
  token {
	...Erc20OwnershipFields
  }
  profile {
	...ProfileOwnershipFields
  }
  follow {
	...FollowConditionFields
  }
  collect {
	...CollectConditionFields
  }
}

fragment BooleanConditionFieldsRecursive on AccessConditionOutput {
  and {
	 criteria {
		 ...SimpleConditionFields
		 and {
			 criteria {
				 ...SimpleConditionFields
			 }
		 }
		 or {
			 criteria {
				 ...SimpleConditionFields
			 }
		 }
	 }
  }
  or {
	 criteria {
		 ...SimpleConditionFields
		 and {
			 criteria {
				 ...SimpleConditionFields
			 }
		 }
		 or {
			 criteria {
				 ...SimpleConditionFields
			 }
		 }
	 }
  }
}

fragment AccessConditionFields on AccessConditionOutput {
	...SimpleConditionFields
	...BooleanConditionFieldsRecursive
}

fragment EncryptedMediaFields on EncryptedMedia {
  url
  width
  height
  mimeType
}

fragment EncryptedMediaSetFields on EncryptedMediaSet {
   original {
	   ...EncryptedMediaFields
   }
   small {
	   ...EncryptedMediaFields
   }
   medium {
	   ...EncryptedMediaFields
   }
}
mutation CreateCommentViaDispatcher($request: CreatePublicCommentRequest!) {
  createCommentViaDispatcher(request: $request) {
	... on RelayerResult {
	  txHash
	  txId
	}
	... on RelayError {
	  reason
	}
  }
}
mutation CreateMirrorViaDispatcher($request: CreateMirrorRequest!) {
  createMirrorViaDispatcher(request: $request) {
	... on RelayerResult {
	  txHash
	  txId
	}
	... on RelayError {
	  reason
	}
  }
}
mutation CreatePostViaDispatcher($request: CreatePublicPostRequest!) {
  createPostViaDispatcher(request: $request) {
	... on RelayerResult {
	  txHash
	  txId
	}
	... on RelayError {
	  reason
	}
  }
}
mutation CreateSetProfileImageURIViaDispatcher($request: UpdateProfileImageRequest!) {
  createSetProfileImageURIViaDispatcher(request: $request) {
	... on RelayerResult {
	  txHash
	  txId
	}
	... on RelayError {
	  reason
	}
  }
}
mutation CreateSetProfileMetadataViaDispatcher($request: CreatePublicSetProfileMetadataURIRequest!) {
  createSetProfileMetadataViaDispatcher(request: $request) {
	... on RelayerResult {
	  txHash
	  txId
	}
	... on RelayError {
	  reason
	}
  }
}
mutation CreateSetDispatcherTypedData($request: SetDispatcherRequest!) {
  createSetDispatcherTypedData(request: $request) {
	id
	expiresAt
	typedData {
	  types {
		SetDispatcherWithSig {
		  name
		  type
		}
	  }
	  domain {
		name
		chainId
		version
		verifyingContract
	  }
	  value {
		nonce
		deadline
		profileId
		dispatcher
	  }
	}
  }
}
query doesFollow($request: DoesFollowRequest!) {
  doesFollow(request: $request) {
	followerAddress
	profileId
	follows
  }
}
query enabledModuleCurrencies {
  enabledModuleCurrencies {
	name
	symbol
	decimals
	address
  }
}
query enabledModules {
  enabledModules {
	collectModules {
	  moduleName
	  contractAddress
	  inputParams {
		name
		type
	  }
	  redeemParams {
		name
		type
	  }
	  returnDataParms {
		name
		type
	  }
	}
	followModules {
	  moduleName
	  contractAddress
	  inputParams {
		name
		type
	  }
	  redeemParams {
		name
		type
	  }
	  returnDataParms {
		name
		type
	  }
	}
	referenceModules {
	  moduleName
	  contractAddress
	  inputParams {
		name
		type
	  }
	  redeemParams {
		name
		type
	  }
	  returnDataParms {
		name
		type
	  }
	}
  }
}
query exploreProfiles($request: ExploreProfilesRequest!) {
  exploreProfiles(request: $request) {
	items {
	  ...ProfileFields
	}
	pageInfo {
	  ...CommonPaginatedResultInfoFields
	}
  }
}
query ExplorePublications($request: ExplorePublicationRequest!) {
  explorePublications(request: $request) {
	items {
	  __typename
	  ... on Post {
		...PostFields
	  }
	  ... on Comment {
		...CommentFields
	  }
	  ... on Mirror {
		...MirrorFields
	  }
	}
	pageInfo {
	  ...CommonPaginatedResultInfoFields
	}
  }
}
mutation createFollowTypedData($request: FollowRequest!) {
  createFollowTypedData(request: $request) {
	id
	expiresAt
	typedData {
	  domain {
		name
		chainId
		version
		verifyingContract
	  }
	  types {
		FollowWithSig {
		  name
		  type
		}
	  }
	  value {
		nonce
		deadline
		profileIds
		datas
	  }
	}
  }
}
query followerNftOwnedTokenIds($request: FollowerNftOwnedTokenIdsRequest!) {
  followerNftOwnedTokenIds(request: $request) {
	followerNftAddress
	tokensIds
  }
}
query followers($request: FollowersRequest!) {
  followers(request: $request) {
	items {
	  wallet {
		...WalletFields
	  }
	  totalAmountOfTimesFollowed
	}
	pageInfo {
	  ...CommonPaginatedResultInfoFields
	}
  }
}
query following($request: FollowingRequest!) {
  following(request: $request) {
	items {
	  profile {
		...ProfileFields
	  }
	  totalAmountOfTimesFollowing
	}
	pageInfo {
	  ...CommonPaginatedResultInfoFields
	}
  }
}
query defaultProfile($request: DefaultProfileRequest!) {
  defaultProfile(request: $request) {
	...ProfileFields
  }
}
query profile($request: SingleProfileQueryRequest!) {
  profile(request: $request) {
	...ProfileFields
  }
}
query profiles($request: ProfileQueryRequest!) {
  profiles(request: $request) {
	items {
	  ...ProfileFields
	}
	pageInfo {
	  ...CommonPaginatedResultInfoFields
	}
  }
}
query publicationEncrypted($request: PublicationQueryRequest!, $profileId: ProfileId!) {
  publication(request: $request) {
	__typename
	... on Post {
	  ...PostFields
	  canDecrypt(profileId: $profileId) {
		result
	  }
	}
	... on Comment {
	  ...CommentFields
	  canDecrypt(profileId: $profileId) {
		result
	  }
	}
	... on Mirror {
	  ...MirrorFields
	  canDecrypt(profileId: $profileId) {
		result
	  }
	}
  }
}
query publication($request: PublicationQueryRequest!) {
  publication(request: $request) {
	__typename
	... on Post {
	  ...PostFields
	}
	... on Comment {
	  ...CommentFields
	}
	... on Mirror {
	  ...MirrorFields
	}
  }
}
query publications($request: PublicationsQueryRequest!) {
  publications(request: $request) {
	items {
	  __typename
	  ... on Post {
		...PostFields
	  }
	  ... on Comment {
		...CommentFields
	  }
	  ... on Mirror {
		...MirrorFields
	  }
	}
	pageInfo {
	  ...CommonPaginatedResultInfoFields
	}
  }
}
query nfts($request: NFTsRequest!) {
  nfts(request: $request) {
	items {
	  contractName
	  contractAddress
	  symbol
	  tokenId
	  owners {
		amount
		address
	  }
	  name
	  description
	  contentURI
	  originalContent {
		uri
		metaType
	  }
	  chainId
	  collectionName
	  ercType
	}
	pageInfo {
	  ...CommonPaginatedResultInfoFields
	}
  }
}
query globalProtocolStats($request: GlobalProtocolStatsRequest) {
  globalProtocolStats(request: $request) {
	totalProfiles
	totalBurntProfiles
	totalPosts
	totalMirrors
	totalComments
	totalCollects
	totalFollows
	totalRevenue {
	  asset {
		name
		symbol
		decimals
		address
	  }
	  value
	}
  }
}
query hasTxHashBeenIndexed($request: HasTxHashBeenIndexedRequest!) {
  hasTxHashBeenIndexed(request: $request) {
	__typename
	... on TransactionIndexedResult {
	  indexed
	  txReceipt {
		...TxReceiptFields
	  }
	  metadataStatus {
		status
		reason
	  }
	}
	... on TransactionError {
	  reason
	  txReceipt {
		...TxReceiptFields
	  }
	}
  }
}
mutation hidePublication($request: HidePublicationRequest!) {
  hidePublication(request: $request)
}
mutation createMirrorTypedData($request: CreateMirrorRequest!) {
  createMirrorTypedData(request: $request) {
	id
	expiresAt
	typedData {
	  types {
		MirrorWithSig {
		  name
		  type
		}
	  }
	  domain {
		name
		chainId
		version
		verifyingContract
	  }
	  value {
		nonce
		deadline
		profileId
		profileIdPointed
		pubIdPointed
		referenceModuleData
		referenceModule
		referenceModuleInitData
	  }
	}
  }
}
query MutualFollowersProfiles($request: MutualFollowersProfilesQueryRequest!) {
  mutualFollowersProfiles(request: $request) {
	items {
	  ...ProfileFields
	}
	pageInfo {
	  ...CommonPaginatedResultInfoFields
	}
  }
}
query nftOwnershipChallenge($request: NftOwnershipChallengeRequest!) {
  nftOwnershipChallenge(request: $request) {
	id
	text
  }
}
query pendingApprovalFollows($request: PendingApprovalFollowsRequest!) {
  pendingApprovalFollows(request: $request) {
	items {
	  ...ProfileFields
	}
	pageInfo {
	  ...CommonPaginatedResultInfoFields
	}
  }
}
query ping {
  ping
}
mutation createPostTypedData($request: CreatePublicPostRequest!) {
  createPostTypedData(request: $request) {
	id
	expiresAt
	typedData {
	  types {
		PostWithSig {
		  name
		  type
		}
	  }
	  domain {
		name
		chainId
		version
		verifyingContract
	  }
	  value {
		nonce
		deadline
		profileId
		contentURI
		collectModule
		collectModuleInitData
		referenceModule
		referenceModuleInitData
	  }
	}
  }
}
query ProfileFeed($request: FeedRequest!) {
  feed(request: $request) {
	items {
	  root {
		__typename
		... on Post {
		  ...PostFields
		}
		... on Comment {
		  ...CommentFields
		}
	  }
	  electedMirror {
		mirrorId
		profile {
		  id
		  handle
		}
		timestamp
	  }
	  mirrors {
		profile {
		  id
		  handle
		}
		timestamp
	  }
	  collects {
		profile {
		  id
		  handle
		}
		timestamp
	  }
	  reactions {
		profile {
		  id
		  handle
		}
		reaction
		timestamp
	  }
	  comments {
		...CommentFields
	  }
	}
	pageInfo {
	  prev
	  next
	  totalCount
	}
  }
}
query ProfileFollowRevenue($request: ProfileFollowRevenueQueryRequest!) {
  profileFollowRevenue(request: $request) {
	revenues {
	  total {
		asset {
		  name
		  symbol
		  decimals
		  address
		}
		value
	  }
	}
  }
}
query ProfilePublicationRevenue($request: ProfilePublicationRevenueQueryRequest!) {
  profilePublicationRevenue(request: $request) {
	items {
	  publication {
		__typename
		... on Post {
		  ...PostFields
		}
		... on Comment {
		  ...CommentFields
		}
		... on Mirror {
		  ...MirrorFields
		}
	  }
	  revenue {
		total {
		  asset {
			name
			symbol
			decimals
			address
		  }
		  value
		}
	  }
	}
	pageInfo {
	  ...CommonPaginatedResultInfoFields
	}
  }
}
query ProfilePublicationsForSale($request: ProfilePublicationsForSaleRequest!) {
  profilePublicationsForSale(request: $request) {
	items {
	  __typename
	  ... on Post {
		...PostFields
	  }
	  ... on Comment {
		...CommentFields
	  }
	}
	pageInfo {
	  ...CommonPaginatedResultInfoFields
	}
  }
}
query ProxyActionStatus($request: ProxyActionId!) {
  proxyActionStatus(proxyActionId: $request) {
	... on ProxyActionStatusResult {
	  txHash
	  txId
	  status
	}
	... on ProxyActionError {
	  reason
	  lastKnownTxId
	}
	... on ProxyActionQueued {
	  queuedAt
	}
  }
}
mutation ProxyAction($request: ProxyActionRequest!) {
  proxyAction(request: $request)
}
query PublicationRevenue($request: PublicationRevenueQueryRequest!) {
  publicationRevenue(request: $request) {
	publication {
	  __typename
	  ... on Post {
		...PostFields
	  }
	  ... on Comment {
		...CommentFields
	  }
	  ... on Mirror {
		...MirrorFields
	  }
	}
	revenue {
	  total {
		asset {
		  name
		  symbol
		  decimals
		  address
		}
		value
	  }
	}
  }
}
query recommendedProfiles {
  recommendedProfiles {
	...ProfileFields
  }
}
mutation Refresh($request: RefreshRequest!) {
  refresh(request: $request) {
	accessToken
	refreshToken
  }
}
mutation removeReaction($request: ReactionRequest!) {
  removeReaction(request: $request)
}
mutation reportPublication($request: ReportPublicationRequest!) {
  reportPublication(request: $request)
}
query SearchProfiles($request: SearchQueryRequest!) {
  search(request: $request) {
	... on ProfileSearchResult {
	  __typename
	  items {
		... on Profile {
		  ...ProfileFields
		}
	  }
	  pageInfo {
		...CommonPaginatedResultInfoFields
	  }
	}
  }
}
query SearchPublications($request: SearchQueryRequest!) {
  search(request: $request) {
	... on PublicationSearchResult {
	  __typename
	  items {
		__typename
		... on Comment {
		  ...CommentFields
		}
		... on Post {
		  ...PostFields
		}
	  }
	  pageInfo {
		...CommonPaginatedResultInfoFields
	  }
	}
  }
}
mutation createSetDefaultProfileTypedData($request: CreateSetDefaultProfileRequest!) {
  createSetDefaultProfileTypedData(request: $request) {
	id
	expiresAt
	typedData {
	  types {
		SetDefaultProfileWithSig {
		  name
		  type
		}
	  }
	  domain {
		name
		chainId
		version
		verifyingContract
	  }
	  value {
		nonce
		deadline
		wallet
		profileId
	  }
	}
  }
}
mutation createSetFollowModuleTypedData($request: CreateSetFollowModuleRequest!) {
  createSetFollowModuleTypedData(request: $request) {
	id
	expiresAt
	typedData {
	  types {
		SetFollowModuleWithSig {
		  name
		  type
		}
	  }
	  domain {
		name
		chainId
		version
		verifyingContract
	  }
	  value {
		nonce
		deadline
		profileId
		followModule
		followModuleInitData
	  }
	}
  }
}
mutation createSetFollowNFTUriTypedData($request: CreateSetFollowNFTUriRequest!) {
  createSetFollowNFTUriTypedData(request: $request) {
	id
	expiresAt
	typedData {
	  types {
		SetFollowNFTURIWithSig {
		  name
		  type
		}
	  }
	  domain {
		name
		chainId
		version
		verifyingContract
	  }
	  value {
		nonce
		profileId
		deadline
		followNFTURI
	  }
	}
  }
}
mutation createSetProfileImageURITypedData($request: UpdateProfileImageRequest!) {
  createSetProfileImageURITypedData(request: $request) {
	id
	expiresAt
	typedData {
	  domain {
		name
		chainId
		version
		verifyingContract
	  }
	  types {
		SetProfileImageURIWithSig {
		  name
		  type
		}
	  }
	  value {
		nonce
		deadline
		imageURI
		profileId
	  }
	}
  }
}
mutation createSetProfileImageURITypedData($request: UpdateProfileImageRequest!) {
  createSetProfileImageURITypedData(request: $request) {
	id
	expiresAt
	typedData {
	  domain {
		name
		chainId
		version
		verifyingContract
	  }
	  types {
		SetProfileImageURIWithSig {
		  name
		  type
		}
	  }
	  value {
		nonce
		deadline
		imageURI
		profileId
	  }
	}
  }
}
mutation createSetProfileMetadataTypedData($request: CreatePublicSetProfileMetadataURIRequest!) {
  createSetProfileMetadataTypedData(request: $request) {
	id
	expiresAt
	typedData {
	  types {
		SetProfileMetadataURIWithSig {
		  name
		  type
		}
	  }
	  domain {
		name
		chainId
		version
		verifyingContract
	  }
	  value {
		nonce
		deadline
		profileId
		metadata
	  }
	}
  }
}
query timeline($request: TimelineRequest!) {
  timeline(request: $request) {
	items {
	  __typename
	  ... on Post {
		...PostFields
	  }
	  ... on Comment {
		...CommentFields
	  }
	  ... on Mirror {
		...MirrorFields
	  }
	}
	pageInfo {
	  ...CommonPaginatedResultInfoFields
	}
  }
}
mutation createToggleFollowTypedData($request: CreateToggleFollowRequest!) {
  createToggleFollowTypedData(request: $request) {
	id
	expiresAt
	typedData {
	  domain {
		name
		chainId
		version
		verifyingContract
	  }
	  types {
		ToggleFollowWithSig {
		  name
		  type
		}
	  }
	  value {
		nonce
		deadline
		profileIds
		enables
	  }
	}
  }
}
mutation createUnfollowTypedData($request: UnfollowRequest!) {
  createUnfollowTypedData(request: $request) {
	id
	expiresAt
	typedData {
	  domain {
		name
		chainId
		version
		verifyingContract
	  }
	  types {
		BurnWithSig {
		  name
		  type
		}
	  }
	  value {
		nonce
		deadline
		tokenId
	  }
	}
  }
}
query notifications($request: NotificationRequest!) {
  notifications(request: $request) {
	items {
	  ... on NewFollowerNotification {
		notificationId
		...NewFollowerNotificationFields
	  }

	  ... on NewMirrorNotification {
		notificationId
		...NewMirrorNotificationFields
	  }

	  ... on NewCollectNotification {
		notificationId
		...NewCollectNotificationFields
	  }

	  ... on NewCommentNotification {
		notificationId
		...NewCommentNotificationFields
	  }

	  ... on NewMentionNotification {
		notificationId
		...NewMentionNotificationFields
	  }
	  ... on NewReactionNotification {
		notificationId
		...NewReactionNotificationFields
	  }
	}
	pageInfo {
	  ...CommonPaginatedResultInfoFields
	}
  }
}

fragment CommentWithCommentedPublicationFields on Comment {
  ...CommentFields
  commentOn {
	... on Post {
	  ...PostFields
	}
	... on Mirror {
	  ...MirrorFields
	}
	... on Comment {
	  ...CommentFields
	}
  }
}

fragment NewFollowerNotificationFields on NewFollowerNotification {
  __typename
  createdAt
  isFollowedByMe
  wallet {
	...WalletFields
  }
}

fragment NewCollectNotificationFields on NewCollectNotification {
  __typename
  createdAt
  wallet {
	...WalletFields
  }
  collectedPublication {
	__typename
	... on Post {
	  ...PostFields
	}

	... on Mirror {
	  ...MirrorFields
	}

	... on Comment {
	  ...CommentFields
	}
  }
}

fragment NewMirrorNotificationFields on NewMirrorNotification {
  __typename
  createdAt
  profile {
	...ProfileFields
  }
  publication {
	... on Post {
	  ...PostFields
	}
	... on Comment {
	  ...CommentFields
	}
  }
}

fragment NewCommentNotificationFields on NewCommentNotification {
  __typename
  createdAt
  profile {
	...ProfileFields
  }
  comment {
	...CommentWithCommentedPublicationFields
  }
}

fragment NewMentionNotificationFields on NewMentionNotification {
  __typename
  mentionPublication {
	... on Post {
	  ...PostFields
	}
	... on Comment {
	  ...CommentFields
	}
  }
  createdAt
}

fragment NewReactionNotificationFields on NewReactionNotification {
  __typename
  createdAt
  profile {
	...ProfileFields
  }
  reaction
  publication {
	... on Post {
	  ...PostFields
	}

	... on Mirror {
	  ...MirrorFields
	}

	... on Comment {
	  ...CommentFields
	}
  }
}
query verify($request: VerifyRequest!) {
  verify(request: $request)
}
query whoCollectedPublication($request: WhoCollectedPublicationRequest!) {
  whoCollectedPublication(request: $request) {
	items {
	  ...WalletFields
	}
	pageInfo {
	  ...CommonPaginatedResultInfoFields
	}
  }
}
query WhoReactedPublication($request: WhoReactedPublicationRequest!) {
  whoReactedPublication(request: $request) {
	items {
	  reactionId
	  reaction
	  reactionAt
	  profile {
		...ProfileFields
	  }
	}
	pageInfo {
	  ...CommonPaginatedResultInfoFields
	}
  }
}
mutation CreateProfile($request: CreateProfileRequest!) {
  createProfile(request:$request) {
	... on RelayerResult {
	  txHash
	}
	... on RelayError {
	  reason
	}
	__typename
  }
}